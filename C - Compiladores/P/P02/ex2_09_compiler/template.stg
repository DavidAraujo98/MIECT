stats(stat) ::= <<
<if(stat)><stat; separator="\n"><endif>
>>

module(stat) ::= <<
public class Calculadora {
    public static void main(String[] args){
        <stats(stat)>
    }

    public int[] addSub(int[] expr1, String op, int[] expr2){
        int[] temp1 = { expr1[0] * expr2[1], expr1[1] * expr2[1] };
        int[] temp2 = { expr2[0] * expr1[1], expr2[1] * expr1[1] };

        int r = 0
        switch (op) {
            case "+":
                r = temp1[0] + temp2[0];
                break;
            case "-":
                r = temp1[0] - temp2[0]; 
                break;
        }
        if (r == 0)
            temp1[1] = 0;
        return new int[] { r, temp1[1] };
    }

    public int[] mulDivRem(int[] expr1, String op, int[] expr2){
        switch (op) {
            case "*":
                return new int[] { expr1[0] * expr2[0], expr1[1] * expr2[1] };
            case ":":
                return new int[] { expr1[0] * expr2[1], expr1[1] * expr2[0] };
            case "%":
                // Not correctly implemented
                int rem = (expr1[0] / expr1[1]) % (expr2[0] / expr2[1]);
                return new int[] { rem, 1 };
        }
    }

    public void print(int[] expr){
        System.out.print(expr[0]);
        if (expr[1] != 1 && expr[0] != 0) {
            System.out.println("/" + expr[1]);
        } else {
            System.out.println();
        }
    }

    public int[] reduce(int[] exp) {
        int i = exp[0];
        if (exp[1] < exp[0])
            i = exp[1];
        
        if (exp[0] == exp[1]) {
            return new int[] { 1, 1 };
        } else if (Math.abs(exp[0]) == Math.abs(exp[1])) {
            return new int[] { -1, 1 };
        }

        while (i > 1) {
            if ((exp[0] % i == 0) && (exp[1] % i == 0)) {
                exp[0] = exp[0] / i;
                exp[1] = exp[1] / i;
                i = exp[0];
                if (exp[1] < exp[0])
                    i = exp[1];
            }
            i--;
        }

        return exp;
    }
}
>>